// Code generated by ogen, DO NOT EDIT.

package rootly

import (
	"net/http"

	"go.opentelemetry.io/otel/trace"

	"github.com/ogen-go/ogen/validate"
)

func decodeScimUsersGetResponse(resp *http.Response, span trace.Span) (res ScimUsersGetRes, err error) {
	switch resp.StatusCode {
	case 200:
		return &ScimUsersGetOK{}, nil
	case 401:
		return &ScimUsersGetUnauthorized{}, nil
	default:
		return res, validate.UnexpectedStatusCode(resp.StatusCode)
	}
}
func decodeScimUsersIDDeleteResponse(resp *http.Response, span trace.Span) (res ScimUsersIDDeleteNoContent, err error) {
	switch resp.StatusCode {
	case 204:
		return ScimUsersIDDeleteNoContent{}, nil
	default:
		return res, validate.UnexpectedStatusCode(resp.StatusCode)
	}
}
func decodeScimUsersIDGetResponse(resp *http.Response, span trace.Span) (res ScimUsersIDGetOK, err error) {
	switch resp.StatusCode {
	case 200:
		return ScimUsersIDGetOK{}, nil
	default:
		return res, validate.UnexpectedStatusCode(resp.StatusCode)
	}
}
func decodeScimUsersIDPatchResponse(resp *http.Response, span trace.Span) (res ScimUsersIDPatchOK, err error) {
	switch resp.StatusCode {
	case 200:
		return ScimUsersIDPatchOK{}, nil
	default:
		return res, validate.UnexpectedStatusCode(resp.StatusCode)
	}
}
func decodeScimUsersPostResponse(resp *http.Response, span trace.Span) (res ScimUsersPostCreated, err error) {
	switch resp.StatusCode {
	case 201:
		return ScimUsersPostCreated{}, nil
	default:
		return res, validate.UnexpectedStatusCode(resp.StatusCode)
	}
}
